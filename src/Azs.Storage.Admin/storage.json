{
  "swagger": "2.0",
  "info": {
    "version": "2019-08-08-preview",
    "title": "StorageAdminClient",
    "description": "Storage Admin Client"
  },
  "host": "adminmanagement.local.azurestack.external",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Storage.Admin/operations": {
      "get": {
        "x-ms-examples": {
          "Get the list of support rest operations.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "description": "Get the list of support rest operations.",
        "tags": [
          "Commerce"
        ],
        "operationId": "Operations_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of operations has been returned.",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/acquisitions": {
      "get": {
        "x-ms-examples": {
          "Returns a list of page blob acquistions.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "Acquisitions"
        ],
        "operationId": "Acquisitions_List",
        "description": "Returns a list of blob acquistions.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of acquisitions has been returned.",
            "schema": {
              "$ref": "#/definitions/AcquisitionList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/settings": {
      "post": {
        "x-ms-examples": {
          "Update storage settings.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Update storge resource provider settings.",
        "operationId": "StorageSettings_Update",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Parameters used to update storge resource provider settings",
            "x-ms-client-flatten": true,
            "name": "settingsObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/settings"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The new storge resource provider setting is updated.",
            "schema": {
              "$ref": "#/definitions/settings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "x-ms-examples": {
          "Returns the storage resource provider settings.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "Settings"
        ],
        "description": "Returns the storage resource provider settings.",
        "operationId": "StorageSettings_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The settings has been returned.",
            "schema": {
              "$ref": "#/definitions/Settings"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/reclaimStorageCapacity": {
      "post": {
        "x-ms-examples": {
          "Start garbage collection on deleted storage objects.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_ReclaimStorageCapacity",
        "description": "Start garbage collection on deleted storage objects.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Garbage collection has completed."
          },
          "202": {
            "description": "ACCEPTED -- Garbage collection has started."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/quotas/{quotaName}": {
      "put": {
        "x-ms-examples": {
          "Create or update an existing storage quota.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageQuotas"
        ],
        "description": "Create or update an existing storage quota.",
        "operationId": "StorageQuotas_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/QuotaNameParameter"
          },
          {
            "$ref": "#/parameters/StorgeQuotaParameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The storage quota has been created or updated.",
            "schema": {
              "$ref": "#/definitions/StorageQuota"
            }
          },
          "404": {
            "description": "NOT FOUND -- The location or quota was not found."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "x-ms-examples": {
          "Delete an existing storage quota.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageQuotas"
        ],
        "description": "Delete an existing quota",
        "operationId": "StorageQuotas_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/QuotaNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The storage quota has been deleted."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "x-ms-examples": {
          "Returns the specified storage quota.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageQuotas"
        ],
        "description": "Returns the specified storage quota.",
        "operationId": "StorageQuotas_Get",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/QuotaNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The storage quota has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageQuota"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/quotas": {
      "get": {
        "x-ms-examples": {
          "Returns a list of storage quotas at the given location.": {
            "parameters": {},
            "responses": {
              "200": {
                "body": {}
              }
            }
          }
        },
        "tags": [
          "StorageQuotas"
        ],
        "description": "Returns a list of storage quotas at the given location.",
        "operationId": "StorageQuotas_List",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of storage quotas has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageQuotaList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts": {
      "get": {
        "x-ms-examples": {
          "Returns a list of storage accounts.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_List",
        "description": "Returns a list of storage accounts.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SummaryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The list of storage accounts has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageAccountList"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts/{accountId}": {
      "get": {
        "x-ms-examples": {
          "Returns the requested storage account.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Get",
        "description": "Returns the requested storage account.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/AccountIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- The storage account has been returned.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Storage.Admin/locations/{location}/storageaccounts/{accountId}/undelete": {
      "post": {
        "x-ms-examples": {
          "Undelete a deleted storage account.": {
            "parameters": {},
            "responses": {
              "200": {}
            }
          }
        },
        "tags": [
          "StorageAccounts"
        ],
        "operationId": "StorageAccounts_Undelete",
        "description": "Undelete a deleted storage account.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/AccountIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK -- Undelete either has been performed or account was not deleted.",
            "schema": {
              "$ref": "#/definitions/StorageAccount"
            }
          },
          "202": {
            "description": "Accepted -- undelete operation trigged; operation will complete asynchronously."
          },
          "default": {
            "description": "Error Response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ErrorResponse": {
      "description": "The error response for request which failed.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error description code.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The error description message.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "The error target description.",
          "type": "string",
          "readOnly": true
        },
        "details": {
          "description": "The error details information.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "Resource": {
      "description": "Base resource object.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Resource Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Resource Type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "Resource Location.",
          "type": "string",
          "readOnly": true
        }
      },
      "x-ms-azure-resource": true
    },
	"Settings": {
      "description": "Storage resource provider settings",
      "type": "object",
      "properties": {
        "retentionPeriodForDeletedStorageAccountsInDays": {
          "description": "Set the retention days for deleted storage accounts.",
          "type": "integer",
          "format": "int32"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "Operation": {
      "description": "Describes the supported REST operation.",
      "properties": {
        "name": {
          "description": "The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service.",
          "type": "string"
        },
        "display": {
          "description": "Contains the localized display information for this particular operation / action.",
          "$ref": "#/definitions/Display"
        }
      }
    },
    "Display": {
      "description": "Contains the localized display information for this particular operation / action.",
      "properties": {
        "provider": {
          "description": "The localized friendly form of the resource provider name – it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services. e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
          "type": "string"
        },
        "resource": {
          "description": "The localized friendly form of the resource type related to this action/operation – it should match the public documentation for the resource provider.",
          "type": "string"
        },
        "operation": {
          "description": "The localized friendly name for the operation, as it should be shown to the user.",
          "type": "string"
        },
        "description": {
          "description": "The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise – it will be used in tool tips and detailed views.",
          "type": "string"
        }
      }
    },
    "OperationList": {
      "description": "Pageable list of supported operations.",
      "properties": {
        "value": {
          "description": "List of operations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "nextLink": {
          "description": "URI to the next page of operations.",
          "type": "string"
        }
      }
    },
    "AcquisitionStatus": {
      "description": "The status of page blob acquisition.",
      "type": "string",
      "enum": [
        "Unknown",
        "NotAcquired",
        "Pending",
        "Success",
        "Failed"
      ],
      "x-ms-enum": {
        "name": "AcquisitionStatus",
        "modelAsString": true
      }
    },
    "Acquisition": {
      "description": "The acquisition of page blob.",
      "type": "object",
      "properties": {
        "susbcriptionid": {
          "description": "ID of the subscription associated with the page BLOB.",
          "type": "string"
        },
        "storageaccount": {
          "description": "The storage account that holds the page BLOB.",
          "type": "string"
        },
        "container": {
          "description": "The container associated with the page BLOB.",
          "type": "string"
        },
        "blob": {
          "description": "The name of the page BLOB.",
          "type": "string"
        },
        "acquisitionid": {
          "description": "The ID of page BLOB acquisition.",
          "type": "string"
        },
        "filePath": {
          "description": "The file path of the page BLOB file on storage cluster.",
          "type": "string"
        },
        "filePathUnc": {
          "description": "The file path unc of the page BLOB file on storage cluster.",
          "type": "string"
        },
        "maximumblobsize": {
          "description": "The maximum size of the page BLOB.",
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "The status of the page BLOB acquisition.",
          "$ref": "#/definitions/AcquisitionStatus"
        }
      }
    },
    "AcquisitionList": {
      "description": "The list of page blob acquisitions.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of acqusitions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Acquisition"
          }
        },
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageQuota": {
      "description": "Storage quota.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Storage quota properties.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageQuotaProperties"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "StorageQuotaProperties": {
      "description": "Storage quota properties.",
      "type": "object",
      "properties": {
        "numberOfStorageAccounts": {
          "description": "Total number of storage accounts.",
          "type": "integer",
          "format": "int32",
          "default": 20
        },
        "capacityInGb": {
          "description": "Maxium capacity (GB).",
          "type": "integer",
          "format": "int32",
          "default": 500
        }
      }
    },
    "StorageQuotaList": {
      "description": "Pageable list of storage quotas.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of storage quotas.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageQuota"
          }
        },
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        }
      }
    },
    "StorageAccountState": {
      "readOnly": true,
      "description": "Storage account state.",
      "type": "string",
      "enum": [
        "Creating",
        "Succeeded",
        "Suspended"
      ],
      "x-ms-enum": {
        "name": "StorageAccountState",
        "modelAsString": true
      }
    },
    "StorageAccountType": {
      "description": "Storage account type.",
      "type": "string",
      "enum": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "x-ms-enum": {
        "name": "StorageAccountType",
        "modelAsString": true
      }
    },
    "LocationStatus": {
      "readOnly": true,
      "type": "string",
      "description": "Gets the status indicating whether the primary location of the storage account is available or unavailable.",
      "enum": [
        "available",
        "unavailable"
      ],
      "x-ms-enum": {
        "name": "LocationStatus",
        "modelAsString": true
      }
    },
    "StorageAccountStatus": {
      "description": "The state of storage account in WAC.",
      "type": "string",
      "enum": [
        "Active",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "StorageAccountStatus",
        "modelAsString": true
      }
    },
    "WacAccountPermissions": {
      "description": "Current operation being performed on Storage Account",
      "type": "string",
      "enum": [
        "Empty",
        "None",
        "Read",
        "Delete",
        "Write",
        "Full"
      ],
      "x-ms-enum": {
        "name": "WacAccountPermissions",
        "modelAsString": true
      }
    },
    "WacAccountStates": {
      "description": "Current operation being performed on Storage Account",
      "type": "string",
      "enum": [
        "None",
        "Active",
        "Deleted",
        "AboveQuota",
        "Suspended",
        "All",
        "GcReadyState"
      ],
      "x-ms-enum": {
        "name": "WacAccountStates",
        "modelAsString": true
      }
    },
    "StorageEncryptionSetting": {
      "description": "Storage Encryption setting",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Bool to indicate whether enabled or not.",
          "type": "boolean",
          "readOnly": true
        },
        "lastEnabledTime": {
          "description": "A rough estimate of the date/time when the encryption was last enabled by the user.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "StorageEncryptionServices": {
      "description": "Services for which encryption setting is mentioned.",
      "type": "object",
      "properties": {
        "blob": {
          "description": "Blob service.",
          "$ref": "#/definitions/StorageEncryptionSetting",
          "readOnly": true
        },
        "table": {
          "description": "Table service.",
          "$ref": "#/definitions/StorageEncryptionSetting",
          "readOnly": true
        },
        "queue": {
          "description": "Queue service",
          "$ref": "#/definitions/StorageEncryptionSetting",
          "readOnly": true
        }
      }
    },
    "EncryptionKeySource": {
      "description": "Encryption Key Source",
      "type": "string",
      "enum": [
        "Microsoft.Storage"
      ],
      "x-ms-enum": {
        "name": "EncryptionKeySource",
        "modelAsString": true
      }
    },
    "StorageEncryption": {
      "description": "Storage encryption setting",
      "type": "object",
      "properties": {
        "services": {
          "description": "Services for which encryption setting is mentioned",
          "$ref": "#/definitions/StorageEncryptionServices",
          "readOnly": true
        },
        "keySource": {
          "description": "Encryption keysource",
          "$ref": "#/definitions/EncryptionKeySource",
          "readOnly": true
        }
      }
    },
    "StorageAccountProperties": {
      "description": "Properties of a storage account.",
      "type": "object",
      "properties": {
        "tenantViewId": {
          "description": "Resource URI of storage account from tenant view.",
          "type": "string",
          "readOnly": true
        },
        "accountType": {
          "description": "Storage account type.",
          "$ref": "#/definitions/StorageAccountType",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning state of storage account.",
          "$ref": "#/definitions/StorageAccountState",
          "readOnly": true
        },
        "primaryEndpoints": {
          "description": "The URLs that are used to perform a retrieval of a public BLOB, queue, or table object.",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "creationTime": {
          "description": "The creation date and time of storage account in UTC.",
          "type": "string",
          "readOnly": true
        },
        "alternateName": {
          "description": "Alternative storage account name being used during undelete operation.",
          "type": "string",
          "readOnly": true
        },
        "primaryLocation": {
          "description": "The primary location for the storage account.",
          "type": "string",
          "readOnly": true
        },
        "faultDomain": {
          "description": "The fault domain for the storage account.",
          "type": "string",
          "readOnly": true
        },
        "statusOfPrimary": {
          "description": "The status of primary location of storage account.",
          "$ref": "#/definitions/LocationStatus",
          "readOnly": true
        },
        "tenantSubscriptionId": {
          "description": "Subscription ID of the subscription under which the storage account locates.",
          "type": "string",
          "readOnly": true
        },
        "tenantStorageAccountName": {
          "description": "Storage account name from tenant view.",
          "type": "string",
          "readOnly": true
        },
        "tenantResourceGroupName": {
          "description": "The name of resource group under which the storage account locates.",
          "type": "string",
          "readOnly": true
        },
        "deletedTime": {
          "description": "The date-time when the storage account was deleted.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "accountStatus": {
          "$ref": "#/definitions/StorageAccountStatus",
          "description": "The status of storage account."
        },
        "permissions": {
          "description": "The permissions on the storage account.",
          "$ref": "#/definitions/WacAccountPermissions",
          "readOnly": true
        },
        "accountId": {
          "description": "Internal storage account ID, which is not visible to tenant.",
          "type": "string",
          "readOnly": true
        },
        "wacInternalState": {
          "description": "The internal state of storage account in WAC.",
          "$ref": "#/definitions/WacAccountStates",
          "readOnly": true
        },
        "encryption": {
          "description": "The storage encryption setting",
          "$ref": "#/definitions/StorageEncryption",
          "readOnly": true
        },
        "supportsHttpsTrafficOnly": {
          "description": "Storage account supports https traffic only or not",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "StorageAccount": {
      "description": "Properties of the storage account.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties of the storage account.",
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/StorageAccountProperties",
          "readOnly": true
        },
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "allOf": [
        {
          "$ref": "storage.json#/definitions/Resource"
        }
      ]
    },
    "StorageAccountList": {
      "description": "Pageable list of storage accounts.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of storage accounts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StorageAccount"
          }
        },
        "nextLink": {
          "description": "URI to the next page.",
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "FilterParameter": {
      "description": "Filter string",
      "name": "$filter",
      "type": "string",
      "in": "query",
      "x-ms-parameter-location": "method"
    },
    "LocationParameter": {
      "description": "Resource location.",
      "name": "location",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "description": "Subscription Id.",
      "name": "subscriptionId",
      "type": "string",
      "in": "path",
      "required": true
    },
    "ApiVersionParameter": {
      "description": "REST Api Version.",
      "name": "api-version",
      "type": "string",
      "in": "query",
      "required": true
    },
    "ResourceGroupNameParameter": {
      "description": "Resource group name.",
      "name": "resourceGroupName",
      "type": "string",
      "in": "path",
      "required": true,
      "x-ms-parameter-location": "method"
    },
    "QuotaNameParameter": {
      "description": "The name of the storage quota.",
      "name": "quotaName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "StorgeQuotaParameters": {
      "description": "The properties of quota being created or updated.",
      "name": "parameters",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/StorageQuotaProperties"
      },
      "x-ms-parameter-location": "method"
    },
    "AccountIdParameter": {
      "description": "Internal storage account ID, which is not visible to tenant.",
      "name": "accountId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SummaryParameter": {
      "description": "Switch for wheter summary or detailed information is returned.",
      "name": "summary",
      "in": "query",
      "required": true,
      "type": "boolean",
      "x-ms-parameter-location": "method"
    }
  },
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Authorization uses an Azure Active Directory OAuth2 flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ]
}